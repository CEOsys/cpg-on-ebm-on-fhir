name: ImplementationGuide Publisher

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main or master branch
  push:
    branches:
      - main
      - master
      - staging
  pull_request:
    branches:
      - main
      - master
      - staging

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  run-publisher:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Run the IG publisher
        uses: docker://hl7fhir/ig-publisher-base:latest
        with:
          args: ./run-ig-publisher.sh

      # deploy implementation guide to github pages
      - name: Deploy
        if: (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./output
          force_orphan: true
      
      - name: Get Version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: './output/package.manifest.json'
          prop_path: 'version'
      - run: echo ${{steps.version.outputs.prop}} 
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.prop }} 
          release_name: Release ${{ steps.version.outputs.prop }} 
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./output/package.tgz
          asset_name: "cpg.ceosys.de#${{ steps.version.outputs.prop }}.tgz"
          asset_content_type: application/gzip
